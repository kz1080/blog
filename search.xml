<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hexo如何配置博文]]></title>
      <url>https://kz1080.github.io/blog/blog/2017/03/13/Hexo%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8D%9A%E6%96%87/</url>
      <content type="html"><![CDATA[<p>Hexo框架使用和目录解析，详细的介绍如何使用Hexo生成网站.<br><a id="more"></a><br>按照教程搭建好了Hexo之后，就让我们开始DIY自己的网站吧！</p>
<p>###文件目录<br>调用Hexo初始化后，得到的目录如下：<br>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br> |   └── _posts<br>└── themes</p>
<p>下面依次介绍上面各个文件或者目录的用途：</p>
<ul>
<li>_config.yml 站点配置文件，很多全局配置都在这个文件中。</li>
<li>package.json 应用数据。从它可以看出hexo版本信息，以及它已经安装的所依赖的一些组件。</li>
<li>scaffolds 模版文件。当你创建一篇新的文章时，hexo会依据模版文件进行创建，主要用在你想在每篇文章都添加一些共性的内容。</li>
<li>source 这个文件夹就是放文章的地方了，除了文章（在_posts文件夹下）还有一些主要的资源，比如文章里的图片，文件等等东西。这个文件夹最好定期做一个备份，丢了它，整个站点就废了。</li>
<li>themes 主题文件夹。</li>
</ul>
<p>###配置<br> _config.yml配置文件<br>站点配置文件，你可以在这里进行大多数配置，诸如网站名称，副标题，描述，作者，语言，主题，部署等等参数。这个文件下面会做较为详细的介绍。</p>
<p>####网站配置</p>
<table>
<thead>
<tr>
<th>配置</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td style="text-align:center">站点名字，也就是html的title，会显示在浏览器的标签上</td>
</tr>
<tr>
<td>subtitle</td>
<td style="text-align:center">站点副标题，会显示在首页上，可以不填</td>
</tr>
<tr>
<td>description</td>
<td style="text-align:center">站点描述，可以不填</td>
</tr>
<tr>
<td>author</td>
<td style="text-align:center">作者名称</td>
</tr>
<tr>
<td>language</td>
<td style="text-align:center">语言</td>
</tr>
<tr>
<td>timezone</td>
<td style="text-align:center">站点时区，默认是电脑时区</td>
</tr>
</tbody>
</table>
<p>####主页位置设置</p>
<table>
<thead>
<tr>
<th>配置</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>url</td>
<td style="text-align:center">站点网址</td>
</tr>
<tr>
<td>root</td>
<td style="text-align:center">站点根目录</td>
</tr>
<tr>
<td>Permalink</td>
<td style="text-align:center">文章的永久网址链接，默认是 :year/:month/:day/:title/ ，指的什么意思？比如我一篇叫『love』的文章是在2012年1月1日写的，那么它对应的链接就  是 <a href="http://yoururl/2012/01/01/love/" target="_blank" rel="external">http://yoururl/2012/01/01/love/</a></td>
</tr>
<tr>
<td>permalink_default</td>
<td style="text-align:center">当然就是default的意思呀</td>
</tr>
</tbody>
</table>
<p>如果网址是次级目录，比如： <a href="http://example.com/blog" target="_blank" rel="external">http://example.com/blog</a> ，那么就要设置url为 <a href="http://example.com/blog/" target="_blank" rel="external">http://example.com/blog/</a> ，并且root要设置为 /blog,要特别注意“/“别掉了。</p>
<p>####目录设置</p>
<table>
<thead>
<tr>
<th>配置</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>source_dir</td>
<td style="text-align:center">source目录，默认值为source</td>
</tr>
<tr>
<td>public_dir</td>
<td style="text-align:center">public目录，静态网站生成的地方，默认值为public</td>
</tr>
<tr>
<td>tag_dir</td>
<td style="text-align:center">tag目录</td>
</tr>
<tr>
<td>archive_dir</td>
<td style="text-align:center">Archive目录</td>
</tr>
<tr>
<td>category_dir</td>
<td style="text-align:center">分类目录</td>
</tr>
<tr>
<td>code_dir</td>
<td style="text-align:center">代码目录</td>
</tr>
<tr>
<td>i18n_dir</td>
<td style="text-align:center">i18n目录</td>
</tr>
<tr>
<td>skip_render</td>
<td style="text-align:center">不想被渲染的路径</td>
</tr>
</tbody>
</table>
<p>####写作设置<br>|配置    |描述|<br>|—|:—:|<br>|new_post_name|    新建文章默认文件名，默认值为 :title.md，比如你执行命令hexo new hello，就会默认在_post目录下创建一个hello.md的文件|<br>|default_layout|    默认布局|<br>|titlecase|<br>|external_link|    在新标签中打开一个外部链接，默认为true|<br>|filename_case|    转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名，默认就行，意义不大|<br>|render_drafts|    是否渲染_drafts目录下的文章，默认为false|<br>|post_asset_folder|    是否启用Asset Folder，默认为false，至于什么是Asset Folder，后面有讲解|<br>|relative_link|    使链接相对于根文件夹，默认false|<br>|future    |是否显示未来日期文章，默认为true|<br>|highlight    |代码块设置|</p>
<p>####分类 &amp; 标签</p>
<table>
<thead>
<tr>
<th>配置</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>default_category</td>
<td style="text-align:center">默认分类，默认为无分类，当然你可以设置一个默认分类。</td>
</tr>
<tr>
<td>category_map</td>
<td style="text-align:center">分类缩略名</td>
</tr>
<tr>
<td>tag_map</td>
<td style="text-align:center">标签缩略名</td>
</tr>
</tbody>
</table>
<p>####日期格式化<br>Hexo使用的Moment.js来处理时间的：</p>
<table>
<thead>
<tr>
<th>配置</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>date_format</td>
<td style="text-align:center">日期格式，默认为MMM D YYYY，一般我们喜欢使用YYYY-MM-DD的格式，其他格式模版可以查看Moment.js</td>
</tr>
<tr>
<td>time_format</td>
<td style="text-align:center">时间格式，默认为H:mm:ss</td>
</tr>
</tbody>
</table>
<p>####分页</p>
<table>
<thead>
<tr>
<th>配置</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>per_page</td>
<td style="text-align:center">一页显示多少篇文章，0 为不分页，默认值为 10</td>
</tr>
<tr>
<td>pagination_dir</td>
<td style="text-align:center">分页目录，默认值为page</td>
</tr>
</tbody>
</table>
<p>####扩展</p>
<table>
<thead>
<tr>
<th>配置</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>theme</td>
<td style="text-align:left">主题配置，此处填上主题名就OK了，当然在themes目录下一定要有你配置的主题文件夹</td>
</tr>
<tr>
<td>deploy</td>
<td style="text-align:left">部署配置，将本地public目录也就是网站部署到服务器上的配置</td>
</tr>
</tbody>
</table>
<p>####package.json文件</p>
<p>应用数据，默认安装了 EJS ， Stylus 和 Markdown 来渲染。如果你不需要可以卸载它们,不知道用处的时候最好别动（我就不知道）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">package.json</div><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"hexo-site"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"0.0.0"</span>,</div><div class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"hexo"</span>: &#123;</div><div class="line">    <span class="string">"version"</span>: <span class="string">"3.2.2"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"dependencies"</span>: &#123;</div><div class="line">    <span class="string">"hexo"</span>: <span class="string">"^3.2.0"</span>,</div><div class="line">    <span class="string">"hexo-deployer-git"</span>: <span class="string">"^0.2.0"</span>,</div><div class="line">    <span class="string">"hexo-generator-archive"</span>: <span class="string">"^0.1.4"</span>,</div><div class="line">    <span class="string">"hexo-generator-category"</span>: <span class="string">"^0.1.3"</span>,</div><div class="line">    <span class="string">"hexo-generator-index"</span>: <span class="string">"^0.2.0"</span>,</div><div class="line">    <span class="string">"hexo-generator-tag"</span>: <span class="string">"^0.2.0"</span>,</div><div class="line">    <span class="string">"hexo-renderer-ejs"</span>: <span class="string">"^0.2.0"</span>,</div><div class="line">    <span class="string">"hexo-renderer-marked"</span>: <span class="string">"^0.2.10"</span>,</div><div class="line">    <span class="string">"hexo-renderer-stylus"</span>: <span class="string">"^0.3.1"</span>,</div><div class="line">    <span class="string">"hexo-server"</span>: <span class="string">"^0.2.0"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####scaffolds</p>
<p>脚手架文件夹。当你创建一个新文章,Hexo基于 scaffolds 文件夹里的类型来创建；<br>主要作用是来怎加标题、日期和打tags。<br>命令</p>
<p>init</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init [folder]</div></pre></td></tr></table></figure>
<p>初始化一个网站。如果没有提供 folder ,Hexo会在当前目录设置网站。</p>
<p>new</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] \&lt;title\&gt;</div></pre></td></tr></table></figure>
<p>创建一篇文章，如果不指定layout，那么就使用 _config.yml 中 default_layout 的值，标题中如果有空格，将整个 title 放到引号中。 比如， hexo new “hello world” 创建一篇叫hello world的文章。</p>
<p>generate</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
<p>生成静态文件：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d , –deploy</td>
<td style="text-align:center">生成完后直接部署</td>
</tr>
<tr>
<td>-w , –watch</td>
<td style="text-align:center">监控文件的改变</td>
</tr>
</tbody>
</table>
<p>publish</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo publish [layout] \&lt;filename\&gt;</div></pre></td></tr></table></figure>
<p>发布为草稿</p>
<p>server</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>启动一个本地服务，默认情况下访问 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>-p , –port</td>
<td>指定端口</td>
</tr>
<tr>
<td>-s , –static</td>
<td>仅服务静态文件</td>
</tr>
<tr>
<td>-l , –log</td>
<td>开启日志</td>
</tr>
</tbody>
</table>
<p>deploy</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>部署你的站点</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>-g , –generate</td>
<td>表示在部署前先重新生成一下站点</td>
</tr>
</tbody>
</table>
<p>render</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo render \&lt;file1&gt; [file2] ...</div></pre></td></tr></table></figure>
<p>渲染文件</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>-o , –output</td>
<td>输出到指定文件，我没用过</td>
</tr>
</tbody>
</table>
<p>migrate</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo migrate \&lt;<span class="built_in">type</span>&gt;</div></pre></td></tr></table></figure>
<p>迁移到其他模块的命令。</p>
<p>clean</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo clean</div></pre></td></tr></table></figure>
<p>删除缓存文件 db.json 以及生成的public目录，当你修改了某些样式或者配置时，如果发现 hexo g 后也没有反应，就可以执行一下这个命令。</p>
<p>list</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo list \&lt;<span class="built_in">type</span>&gt;</div></pre></td></tr></table></figure>
<p>列出所有路由</p>
<p>version</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo version</div></pre></td></tr></table></figure>
<p>显示hexo的版本信息到控制台</p>
<p>Options</p>
<p>Safe mode</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo --safe</div></pre></td></tr></table></figure>
<p>安全模式，使所有插件和脚本不生效</p>
<p>Debug mode</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo --debug</div></pre></td></tr></table></figure>
<p>日志详细信息输出到终端。</p>
<p>Silent mode</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo --silent</div></pre></td></tr></table></figure>
<p>静默模式，不在终端上显示任何信息</p>
<p>Customize config file path</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo --config custom.yml</div></pre></td></tr></table></figure>
<p>使用一个自定义配置文件替换默认 _config.yml</p>
<p>Display drafts</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo --draft</div></pre></td></tr></table></figure>
<p>显示草稿文章（位于 source/_drafts 目录下）</p>
<p>Customize CWD</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo --cwd /path/to/cwd</div></pre></td></tr></table></figure>
<p>自定义当前工作目录路径，假如你没在工作目录下，可以使用这个命令指定一下工作目录路径</p>
<ol>
<li>开始写作</li>
</ol>
<p>使用下面的命令创建一个新文章：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] \&lt;title&gt;</div></pre></td></tr></table></figure>
<p>默认的文章布局是 post ，当然你可用提供自己的布局文件。你可以编辑 _config.yml 修改默认布局。</p>
<p>Layout（布局）</p>
<p>Hexo提供了3个默认布局： post 、 page 和 draft 。不同布局的文章会被保存到不同的目录，这取决于它的布局类型。 自定义布局保存到 source/_posts 文件夹。</p>
<table>
<thead>
<tr>
<th>布局</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>post</td>
<td>source/_posts</td>
</tr>
<tr>
<td>page</td>
<td>source</td>
</tr>
<tr>
<td>draft</td>
<td>source/_drafts</td>
</tr>
</tbody>
</table>
<p>不处理文章!</p>
<p>如果你不希望你的文章被处理，你可以设置 layout:false 。</p>
<p>Filename（文件名）</p>
<p>默认情况下，hexo使用文章标题作为文件名。 你可以编辑 _config.yml 的 new_post_name 设置改变默认的文件名。 例如 :year-:month-:day-:title.md 将前缀的文件名后创建日期。你可以使用以下的占位符：</p>
<table>
<thead>
<tr>
<th>占位符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>:title</td>
<td>文章标题</td>
</tr>
<tr>
<td>:year</td>
<td>创建年份</td>
</tr>
<tr>
<td>:month</td>
<td>月份，如4月为 04</td>
</tr>
<tr>
<td>:i_month</td>
<td>月份，单数字，比如4月就是 4</td>
</tr>
<tr>
<td>:day</td>
<td>日期</td>
</tr>
<tr>
<td>:i_day</td>
<td></td>
<td>日期</td>
</tr>
<tr>
<td>Drafts（草稿）</td>
</tr>
</tbody>
</table>
<p>前面hexo提到一个特殊的布局： draft 。 这种布局的帖子保存到 source/_drafts 文件夹。你可以使用 publish 命令移动草稿到 source/_posts 文件夹。 这个命令类似于你使用了 new 。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo publish [layout] \&lt;title&gt;</div></pre></td></tr></table></figure>
<p>草稿默认不显示，你可以添加 –draft 选项或者设置 _config.yml 中的 render_drafts 使hexo显示草稿。</p>
<p>Scaffolds（模版）</p>
<p>当创建一篇文章,Hexo将构建基于 scaffolds 文件夹中的相应文件。例如:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new photo <span class="string">"My Gallery"</span></div></pre></td></tr></table></figure>
<p>当你运行这个命令，要尝试在 scaffolds 文件夹下找到文件名为 photo.md 的模板文件。下面占位符可以使用模板：</p>
<table>
<thead>
<tr>
<th>占位符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>layout</td>
<td>布局</td>
</tr>
<tr>
<td>title</td>
<td>文章标题</td>
</tr>
<tr>
<td>date</td>
<td>发布时间</td>
</tr>
</tbody>
</table>
<ol>
<li>前置申明</li>
</ol>
<p>前置申明的意思是写在文章前面的一块内容，为了对文章进行某些设置。它有两种书写方式：</p>
<p>YAML方式，以三短线结束<br>``bash<br>title: Hello World</p>
<h2 id="date-2013-7-13-20-46-25"><a href="#date-2013-7-13-20-46-25" class="headerlink" title="date: 2013/7/13 20:46:25"></a>date: 2013/7/13 20:46:25</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">JSON方式，以三分号结束</div><div class="line">```bash</div><div class="line"><span class="string">"title"</span>: <span class="string">"Hello World"</span>,</div><div class="line"><span class="string">"date"</span>: <span class="string">"2013/7/13 20:46:25"</span></div><div class="line">;;;</div></pre></td></tr></table></figure>
<p>设置以及默认值</p>
<table>
<thead>
<tr>
<th>设置</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>layout</td>
<td>布局</td>
</tr>
<tr>
<td>title</td>
<td>文章标题</td>
</tr>
<tr>
<td>date</td>
<td>发布时间，默认为文件创建时间</td>
</tr>
<tr>
<td>updated</td>
<td>文件修改时间</td>
</tr>
<tr>
<td>comments</td>
<td>是否开启评论，默认为true</td>
</tr>
<tr>
<td>tags</td>
<td>文章标签</td>
</tr>
<tr>
<td>categories    文章所属分类</td>
</tr>
<tr>
<td>permalink</td>
<td>文章永久链接，一般不用写，默认就行</td>
</tr>
</tbody>
</table>
<p>分类 &amp; 标签</p>
<p>分类和标签只支持在文章。分类可能会有多层级别。 下面是一个例子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">categories:</div><div class="line">- Sports</div><div class="line">- Baseball</div><div class="line">tags:</div><div class="line">- Injury</div><div class="line">- Fight</div><div class="line">- Shocking</div></pre></td></tr></table></figure></p>
<ol>
<li>标签插件</li>
</ol>
<p>这里的标签插件不是文章中的标签，它可以帮助你在文章中插入特定的一些内容。</p>
<p>Block Quote（块引用）</p>
<p>插入引号与作者、来源和文章的标题。 别名 ：quote</p>
<blockquote><p>content</p>
<footer><strong>[author[</strong><cite>source]] [link] [source_link_title]</cite></footer></blockquote>
<p>示例</p>
<p>没有任何参数，纯输出blockquote</p>
<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
<p>引用一本书</p>
<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>
<p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David Levithan —— Wide Awake</p>
<p>引用自Twitter</p>
<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="external">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="external">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>
<p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="external">http://devdocs.io</a> @DevDocs —— twitter.com/devdocs/status/356095192085962752</p>
<p>引用网络上一篇文章</p>
<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote>
<p>Every interaction is both precious and an opportunity to delight.</p>
<p>Seth Godin —— Welcome to Island Marketing<br>代码块</p>
<p>文章中插入代码块 别名 ：code</p>
<figure class="highlight plain"><figcaption><span>[title] [] [url] [link text]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">code snippet</div></pre></td></tr></table></figure>
<p>示例</p>
<p>普通代码块</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">alert</span>(<span class="string">'Hello World!'</span>);</div></pre></td></tr></table></figure>
<p>alert(‘Hello World!’);<br>指定语言</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</div></pre></td></tr></table></figure>
<p>[rectangle setX: 10 y: 10 width: 20 height: 20];<br>Gist</p>
<script src="//gist.github.com/gist_id.js?file=[filename]"></script>
<p>iframe</p>
<iframe src="url" width="[width]" height="[height]" frameborder="0" allowfullscreen></iframe>
<p>Image</p>
<img src="/blog/path/to/image" class="[class names]" title="[width] [height] [title text [alt text]]">
<p>Link</p>
<a>text url [external] [title]</a>
<p>更多…</p>
<ol>
<li>资源目录x</li>
</ol>
<p>资源是非文章的文件，在 source 文件夹中，如图片、css、javascript文件等。 Hexo提供了一个更加方便的方式来管理资源。你可以修改 post_asset_folder 设置。</p>
<p>post_asset_folder: true<br>一旦 post_asset_folder 设置启用,在你创建文章的时候，Hexo会创建一个同名目录， 你可以将该文章关联的资源全部放到该目录下。这样就可以更加方便的使用它们了。</p>
<p>标签插件使用</p>



<ol>
<li>数据文件</li>
</ol>
<p>有时，你可能会使用一些不在post中的模版数据，或者你想复用这些数据， 那么你可以试用一下Hexo3中的『Data files』功能。这个特性加载 source/_data 目录中的YAML或者JSON文件，从而用到你的网站中。</p>
<p>例如在 source/_data 文件夹中添加 menu.yml</p>
<p>Home: /<br>Gallery: /gallery/<br>Archives: /archives/<br>你可用在模板中使用它们：</p>

<ol>
<li>服务器</li>
</ol>
<p>Hexo-server</p>
<p>在Hexo3中，服务器模块从主模块中分开了，你可以通过安装 hexo-server 来使用它。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-server --save</div></pre></td></tr></table></figure>
<p>一旦服务器安装,运行以下命令启动服务器。 默认你的网站将会运行在 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 。 当服务器正在运行时,Hexo将自动监控文件更改和更新。你不需要重新启动服务器。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>如果你想修改端口或遇到 EADDRINUSE 错误。您可以添加 -p 选项来设置其他端口。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server -p 5000</div></pre></td></tr></table></figure>
<p>Static Mode</p>
<p>在静态模式下, public 文件夹的监控的禁用的。你必须运行 hexo generate 之前启动服务器，通常用于生产环境。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server <span class="_">-s</span></div></pre></td></tr></table></figure>
<p>Custom IP</p>
<p>Hexo运行服务器在默认0.0.0.0。你可以覆盖默认的IP设置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server -i 192.168.1.1</div></pre></td></tr></table></figure>
<ol>
<li>生成器</li>
</ol>
<p>Hexo生成静态文件非常简单、高效。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
<p>监听文件修改</p>
<p>Hexo立即可以看到文件更改并重新生成文件。Hexo将比较SHA1校验和文件和只写文件的改变。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate --watch</div></pre></td></tr></table></figure>
<p>部署后生成</p>
<p>部署生成后,您可以运行以下命令之一，这2个命令使用结果相同。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate --deploy</div><div class="line"> hexo deploy --generate</div></pre></td></tr></table></figure>
<ol>
<li>部署</li>
</ol>
<p>Hexo为部署提供了一个快速、简单的方法。你只需要一个命令将网站部署到服务器。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>在我们开始之前,你必须在 _config.yml 修改设置。一个有效的部署设置必须有 type 字段。例如:</p>
<p>deploy:<br>  type: git<br>你可用同时部署到多个 type ，Hexo将依次执行每个部署。</p>
<p>deploy:</p>
<ul>
<li>type: git<br>repo:</li>
<li>type: heroku<br>repo:<br>Git</li>
</ul>
<p>安装 hexo-deployer-git</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>编辑设置：<br>deploy:<br>  type: git<br>  repo: \<repository url=""><br>  branch: [branch]<br>  message: [message]</repository></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>repo</td>
<td>github仓库地址</td>
</tr>
<tr>
<td>branch</td>
<td>分支名称</td>
</tr>
<tr>
<td>message</td>
<td>定制提交消息(默认为 Site updated: { now(“YYYY-MM-DD HH:mm:ss”) })</td>
</tr>
</tbody>
</table>
<p>####最后举个栗子<br> _config.yml 文件的作用上面已经讲过了，下面先呈现以下 _config.yml 文件中的内容，并对主要参数做简单的介绍<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: http://zespia.tw/hexo/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/tommy351/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site    #站点信息配置</span></div><div class="line">title: 浪花一朵朵        <span class="comment">#网站标题</span></div><div class="line">subtitle: 技术是海，深不见底；生活是洋，广不着边；而我如浪花，清澈透明并且舞动双手，仰望天空。        <span class="comment">#网站副标题</span></div><div class="line">description: 浪花一朵朵        <span class="comment">#网站描述，网站上不会显示出来，但搜索引擎会用到改字段</span></div><div class="line">author: 员员        <span class="comment">#作者</span></div><div class="line">email: syxiaqj@gmail.com    <span class="comment">#联系邮箱</span></div><div class="line">language: zh-CN        <span class="comment">#语言，简体中文当然用zh-CN</span></div><div class="line"></div><div class="line"><span class="comment"># URL    #部署到公网，信息配置，后面介绍如何将网站部署到git上时介绍此信息</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line">url: http://syxiaqj.github.io    </div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line"></div><div class="line"><span class="comment"># Directory</span></div><div class="line">source_dir: <span class="built_in">source</span></div><div class="line">public_dir: public</div><div class="line"></div><div class="line"><span class="comment"># Writing</span></div><div class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></div><div class="line">default_layout: post</div><div class="line">auto_spacing: <span class="literal">false</span> <span class="comment"># Add spaces between asian characters and western characters</span></div><div class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line">external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line">max_open_file: 100</div><div class="line">multi_thread: <span class="literal">true</span></div><div class="line">filename_case: 0</div><div class="line">render_drafts: <span class="literal">false</span></div><div class="line">post_asset_folder: <span class="literal">false</span></div><div class="line">highlight:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  line_number: <span class="literal">true</span></div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag</span></div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"><span class="comment"># Archives</span></div><div class="line"><span class="comment">## 2: Enable pagination        #启用分页</span></div><div class="line"><span class="comment">## 1: Disable pagination    #不启用分页</span></div><div class="line"><span class="comment">## 0: Fully Disable            #完全不可见</span></div><div class="line">archive: 1</div><div class="line">category: 1</div><div class="line">tag: 1</div><div class="line"></div><div class="line"><span class="comment"># Server</span></div><div class="line"><span class="comment">## Hexo uses Connect as a server</span></div><div class="line"><span class="comment">## You can customize the logger format as defined in</span></div><div class="line"><span class="comment">## http://www.senchalabs.org/connect/logger.html</span></div><div class="line">port: 4000</div><div class="line">logger: <span class="literal">false</span></div><div class="line">logger_format:</div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line">date_format: MMM D YYYY</div><div class="line">time_format: H:mm:ss</div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"><span class="comment"># Disqus</span></div><div class="line">disqus_shortname:</div><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span></div><div class="line"><span class="comment">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span></div><div class="line">theme: light        <span class="comment">#使用的主题名称</span></div><div class="line">exclude_generator:</div><div class="line">plugins:            <span class="comment">#插件列表</span></div><div class="line">- hexo-generator-feed</div><div class="line">- hexo-generator-sitemap</div><div class="line"></div><div class="line"><span class="comment"># Markdown</span></div><div class="line"><span class="comment">## https://github.com/chjj/marked</span></div><div class="line">markdown:</div><div class="line">  gfm: <span class="literal">true</span></div><div class="line">  pedantic: <span class="literal">false</span></div><div class="line">  sanitize: <span class="literal">false</span></div><div class="line">  tables: <span class="literal">true</span></div><div class="line">  breaks: <span class="literal">true</span></div><div class="line">  smartLists: <span class="literal">true</span></div><div class="line">  smartypants: <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Deployment        #部署到公网配置，后面介绍部署到git上时再详细介绍</span></div><div class="line"><span class="comment">## Docs: http://zespia.tw/hexo/docs/deployment.html</span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: github</div><div class="line">  repository: https://github.com/syxiaqj/syxiaqj.github.io.git</div></pre></td></tr></table></figure></p>
<p>先不要急于修改其他参数，我们文件中的第一部分 Site (站点信息)，很容易改，还有主题，在 Extensions 中的 theme: 参数，这个参数的值就是hexo主目录中 themes （主题目录）下子目录文件夹的名称（主题）。</p>
<p>###参考文档</p>
<ul>
<li><a href="使用hexo搭建静态博客">使用hexo搭建静态博客</a></li>
<li><a href="http://www.tuicool.com/articles/fiYVbaY" target="_blank" rel="external">hexo的目录结构及作用</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建个人网站]]></title>
      <url>https://kz1080.github.io/blog/blog/2017/03/13/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      <content type="html"><![CDATA[<p>通过Hexo工具快速生成网站并发布到GitHub。<br><a id="more"></a><br>  网络上很多文章讲怎么用<a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>和Github(<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a>) 来搭建自己的博客，然后并没有讲他们之间的关系，现将如何搭建网站以及他们之间的关系整理出来。</p>
<p>###安装工具<br>需要安装的工具用：</p>
<ul>
<li><a href="https://git-scm.com/" target="_blank" rel="external">Git</a></li>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
<li>Hexo</li>
</ul>
<h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><p>  Hexo 是一款基于Node.js，支持多进程，快速生成静态网页的博客框架。简单来说就是用来生成静态网站的工具，生成的静态网站本地就可以浏览访问。</p>
<h3 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h3><p>  由于Hexo是基于Node.js 的，所以要先安装Node.js,安装很简单，到官网下载<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a> ，然后点击安装，一直Next到Finish。<br>  安装Node.js后就可以使用node的包管理和分发工具npm了，我们用npm来安装Hexo，随便打开一个cmd，输入命令:<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> -g hexo</div></pre></td></tr></table></figure></p>
<p>进行安装。</p>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>  Git是代码托管服工具，到<a href="https://git-scm.com/downloads/" target="_blank" rel="external">官网</a> 下载对应的文件进行安装，没有什么特殊的设置。<br>  Hexo框架的作用主要是生成炫酷个人网站，现在需要将生产的个人网站发布到外网IP，也就是服务器，这样就可以随时随地访问自己的博客了。<br>  部署到外网需要独立的IP，现在网络上有免费的域名和收费的域名，都可以；不过最简单的就是使用github的二级域名，使用很方便，下面将介绍将网站部署到github。</p>
<h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>  打开网址：<a href="https://github.com，" target="_blank" rel="external">https://github.com，</a> 注册属于自己的Github账号，拥有账号则登录账号进入，在Repositories中创建一个新的repository（仓库），例如blog，那么创建的仓库名为 blog,注意下图红色框部分，记得勾上，不然没有创建master分支，后面不好操作：<br><img src="http://p1.bpimg.com/576437/6e10c08b08e21762.jpg" alt="创建repository"></p>
<p>接下来在Setting菜单开启二级域名：</p>
<p><img src="http://p1.bpimg.com/576437/e4c634f80d74b2c9.jpg" alt="开启二级域名"></p>
<p>  这样我们就有了GitHub默认分配给每个用户的二级域名：<a href="http://blog。" target="_blank" rel="external">http://blog。</a><br>有了这个二级域名后，我们就可以通过GitHub的免费站点部署自己的个人网站，通过二级域名就可访问master分支下的index.html网页文件了，不过目前master目录下什么文件没有，本文后面讲解如何将利用Hexo这个静态框架生成的自己的个人博客网站部署到master目录下。</p>
<h3 id="Hexo生成静态网站"><a href="#Hexo生成静态网站" class="headerlink" title="Hexo生成静态网站"></a>Hexo生成静态网站</h3><p> 在电脑新建一个文件夹blog用来存放个人博客网站，进入blog目录，shift + 右键打开Cmd，利用hexo命令来一步一步的生成自己的网站。<br>初始化Hexo框架文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p> 执行成功后，在blog文件夹下可以看到如下文件：<br> scaffolds<br> source<br> themes<br>.gitignore<br>_config.yml<br>package.json</p>
<p>以后blog这个目录就是整个网站的根目录，以后所有的操作都在该目录下进行。</p>
<p>生成静态页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g  (或hexo generate)</div></pre></td></tr></table></figure></p>
<p>执行成功后blog文件夹下会多出如下文件和文件夹：<br>node_modules<br>public<br>db.json</p>
<p>启动本地服务，进行文章预览或调试，命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server  （hexo s）</div></pre></td></tr></table></figure></p>
<p>之后在浏览器输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">### 部署与发布</div><div class="line"> 首先，需要修改前面用Hexo生成的/blog/_config.yml文件;</div><div class="line"> 在配置过程中请使用[yamllint](http://www.yamllint.com/)来保证自己的yaml语法正确</div><div class="line">修改全局配置文件</div><div class="line">此部分可以参考[Hexo](http://www.yamllint.com/)官方文档</div><div class="line">您可以在 _config.yml 中修改大部份的配置。</div><div class="line"> 设置index的地址：</div><div class="line"> ```bash</div><div class="line"> url: https://你的github帐号.github.io/Repository名称/</div><div class="line"> root: /Repository名称</div></pre></td></tr></table></figure></p>
<p> 例如：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">url: https://kz1080.github.io/blog/</div><div class="line">root: /blog</div></pre></td></tr></table></figure></p>
<p>其中blog为博客存放的repository位置。</p>
<p> 设置 deploy属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: https://github.com/你的github帐号/blog.github.io</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">type</span>: git</div><div class="line">repo: https://github.com/kz1080/blog.git</div><div class="line">branch: master</div></pre></td></tr></table></figure></p>
<p>如果你上传github是通过SSH，则配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line"><span class="built_in">type</span>: git</div><div class="line">repo: git@github.com:你的github帐号/repository名称.git(就是repository的SSH地址)</div><div class="line">branch: master</div></pre></td></tr></table></figure></p>
<p>例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line"><span class="built_in">type</span>: git</div><div class="line">repo: git@github.com:kz1080/blog.git</div><div class="line">branch: master</div></pre></td></tr></table></figure></p>
<p>然后需要配置下SSH，步骤如下：</p>
<ol>
<li>设置用户名：git config –global user.email “xxx.xxx@xxx.com” config –global user.name “xxx”（冒号一定要输入）</li>
<li>生成密钥：ssh-keygen -t rsa -C “xxx.xxx@xxx.com”（安装git后使用git的key工具）</li>
<li>找到blog文件夹下.ssh目录下生成的两个文件id_rsa和id_rsa.pub，用文本编辑器打开ssh.pub文件，拷贝其中的内容，将其添加到GitHub上；<br>路径:Repository-&gt;Settings-&gt;Deploy keys</li>
<li>执行命令ssh -T git@github.com进行验证</li>
</ol>
<p>若有问题，请重新设置。常见错误请参考：</p>
<ul>
<li><a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="external">GitHub Help - Generating SSH Keys</a></li>
<li><a href="https://help.github.com/articles/error-permission-denied-publickey/" target="_blank" rel="external">GitHub Help - Error Permission denied (publickey)</a></li>
</ul>
<p>再执行命令<figure class="highlight plain"><figcaption><span>install hexo-deployer-git --save```；</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">5. 执行命令hexo g进行部署，再执行命令hexo d进行发布，发布成功后，在浏览器中输入你Github的二级域名，如：[https://kz1080.github.io/aaron/](https://kz1080.github.io/aaron/ ) 就可以看到你发布的网站了，不过如果想通过你申请的一级域名来访问的话还需要在你的blog的source目录下新建CNAME文件，里面输入你的域名地址，再进行部署及发布就行。</div><div class="line">***</div><div class="line">是不是发现使用``` hexo d```发布不了？</div><div class="line">对，这个和git的版本有关，用1.9的git就可以。</div><div class="line">解决方法：调用```hexo d```后进入/blog/.deploy_git使用命令：</div><div class="line">```bash</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure></p>
<p>把整个.deploy_git下的文件上传GitHub就可以了。</p>
<p>相关的git命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git init（初始化一个项目）</div><div class="line">git add *  (添加目录下所有文件)</div><div class="line">git remote add origin  git@github.com:github name/repository name.github.io.git(repository地址)</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure></p>
<p>###添加新文章<br>命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new  <span class="string">"文章名字"</span></div></pre></td></tr></table></figure></p>
<p>打开Hexo目录下的source文件夹，所有的文章都会以md形式保存在_post文件夹中，只要在_post文件夹中新建md类型的文档，就能在执行hexo g的时候被渲染。<br>新建的文章头需要添加一些yml信息，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">title: hello-world   //在此处添加你的标题。</div><div class="line">date: 2014-11-7 08:55:29   //在此处输入你编辑这篇文章的时间。</div><div class="line">tags: [ACM, UVa, C/C++]  //在此处添加这篇文章的标签，多个标签需要使用`[ ]`来包裹，用`,`来分隔。</div><div class="line">categories: Exercise   //在此处输入这篇文章的分类。</div><div class="line">toc: <span class="literal">true</span>  //在此处设定是否开启目录，需要主题支持。</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>###进阶<br>更换主题：<br>可以在<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">这里</a>寻找自己喜欢的主题<br>下载所有的主题文件，保存到Hexo目录下的themes文件夹下。然后在_config.yml文件中修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: http://hexo.io/themes/</span></div><div class="line">theme: landscape //themes文件夹中对应文件夹的名称</div></pre></td></tr></table></figure></p>
<p>然后先执行hexo clean，然后重新hexo g，并且hexo d，很快就能看到新主题的效果了~</p>
<p>附：<br>每次部署的步骤，可按以下三步来进行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>###参考文档</p>
<ul>
<li><a href="http://aresxiong.com/2015/11/06/tools_hexo_build_guidance/" target="_blank" rel="external">http://aresxiong.com/2015/11/06/tools_hexo_build_guidance/</a></li>
<li><a href="https://xuanwo.org/2015/03/26/hexo-intor/" target="_blank" rel="external">https://xuanwo.org/2015/03/26/hexo-intor/</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">http://ibruce.info/2013/11/22/hexo-your-blog/</a></li>
</ul>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo之Markdown]]></title>
      <url>https://kz1080.github.io/blog/blog/2017/03/13/Hexo%E4%B9%8BMarkdown/</url>
      <content type="html"><![CDATA[<p>Markdown 语法简介，Hexo的网页使用Markdown语言编写<br><a id="more"></a><br>Hexo使用Markdown标记语言快速生成html静态网页，markdown由于使用方便而流行，她因为“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML文档”被用来广大程序员喜爱，对了，Markdown这一轻量级标记语言由程序员 约翰·格鲁伯和亚伦·斯沃茨创建。</p>
<p>###Markdown语法<br>下面介绍下Markdown最基础的语法：<br>1、分段： 两个回车</p>
<p>2、换行 两个空格 + 回车</p>
<p>3、标题 # ~ ###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题</p>
<p>4、引用 &gt;</p>
<p>5、列表 * ， + ， - ， 1. ，选其中之一，注意后面有个空格</p>
<p>6、代码区块 四个空格 开头</p>
<p>7、链接[文字](链接地址)</p>
<p>8、图片 ![图片说明](图片地址) ，图片地址可以是本地路劲，也可以是网络地址。<br>使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。<br>使用微博图床，地址<a href="http://weibotuchuang.sinaapp.com/，将图片拖入区域中，会生成图片的URL，这就是链接地址。" target="_blank" rel="external">http://weibotuchuang.sinaapp.com/，将图片拖入区域中，会生成图片的URL，这就是链接地址。</a></p>
<p>9、强调 <strong>文字</strong> ， <strong>文字</strong> ， <em>文字</em> ， <em>文字</em></p>
<p>10、代码```，``</p>
<p>例文</p>
<p>在线编辑器例文： <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">传送门</a></p>
<p>###参考文档</p>
<ul>
<li><a href="http://blog.csdn.net/u012307002/article/details/51298705" target="_blank" rel="external">Hexo文章中插入图片</a></li>
<li><a href="http://www.tuicool.com/articles/I36zYr" target="_blank" rel="external">hexo命令及Markdown语法</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://kz1080.github.io/blog/blog/2017/03/13/hello-world/</url>
      <content type="html"><![CDATA[<p>Hexo基本的操作命令，来这里入门吧！<br><a id="more"></a><br>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
    
  
</search>
